// <auto-generated />
using System;
using Lali.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lali.DataAccess.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    [Migration("20221228172453_Bestellung2")]
    partial class Bestellung2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Lali.DataAccess.Entities.Artikel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Artikelnummer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bezeichnung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KategorieId")
                        .HasColumnType("int");

                    b.Property<int>("Menge")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PreisSingleNetto")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("KategorieId");

                    b.ToTable("Artikel");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Artikelnummer = "K1",
                            Bezeichnung = "A kit provided by Glossier, containing skin care, hair care and makeup products",
                            ImageURL = "/ArtikelImages/Kleidung/Kleider.png",
                            KategorieId = 1,
                            Menge = 100,
                            Name = "TestKleidung",
                            PreisSingleNetto = 100m
                        },
                        new
                        {
                            Id = 2,
                            Artikelnummer = "H1",
                            Bezeichnung = "A kit provided by Glossier, containing skin care, hair care and makeup products",
                            ImageURL = "/ArtikelImages/Haushaltgeräte/HaushaltGerät.png",
                            KategorieId = 2,
                            Menge = 100,
                            Name = "HaushaltgeräteTest",
                            PreisSingleNetto = 100m
                        },
                        new
                        {
                            Id = 3,
                            Artikelnummer = "E1",
                            Bezeichnung = "A kit provided by Glossier, containing skin care, hair care and makeup products",
                            ImageURL = "/ArtikelImages/Elektronikgeräte/ElekGerät.png",
                            KategorieId = 3,
                            Menge = 100,
                            Name = " ElektronikgeräteTest",
                            PreisSingleNetto = 100m
                        },
                        new
                        {
                            Id = 4,
                            Artikelnummer = "C1",
                            Bezeichnung = "A kit provided by Glossier, containing skin care, hair care and makeup products",
                            ImageURL = "/ArtikelImages/Computer/Computer.png",
                            KategorieId = 4,
                            Menge = 100,
                            Name = "ComputerTest",
                            PreisSingleNetto = 100m
                        },
                        new
                        {
                            Id = 5,
                            Artikelnummer = "M1",
                            Bezeichnung = "A kit provided by Glossier, containing skin care, hair care and makeup products",
                            ImageURL = "/ArtikelImages/Mobiletelefone/Mobile.png",
                            KategorieId = 5,
                            Menge = 100,
                            Name = "MobiletelefoneTest",
                            PreisSingleNetto = 100m
                        },
                        new
                        {
                            Id = 6,
                            Artikelnummer = "T1",
                            Bezeichnung = "A kit provided by Glossier, containing skin care, hair care and makeup products",
                            ImageURL = "/ArtikelImages/TestKategorie/Test.png",
                            KategorieId = 6,
                            Menge = 100,
                            Name = "TestKategorieTest",
                            PreisSingleNetto = 100m
                        });
                });

            modelBuilder.Entity("Lali.DataAccess.Entities.Bestellung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Anrede")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BenutzerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("BestelltAm")
                        .HasColumnType("datetime2");

                    b.Property<string>("BrzahlungId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HandyNummer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hausnummer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Land")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MwSt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ort")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Plz")
                        .HasColumnType("int");

                    b.Property<string>("SessionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Strasse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SummeBrutto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SummeNetto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Vorname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Bestellung");
                });

            modelBuilder.Entity("Lali.DataAccess.Entities.BestellungItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ArtikelId")
                        .HasColumnType("int");

                    b.Property<string>("ArtikelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ArtikelPreisSingleNetto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BestellungId")
                        .HasColumnType("int");

                    b.Property<int>("Menge")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BestellungItems");
                });

            modelBuilder.Entity("Lali.DataAccess.Entities.Kategorie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kategorie");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kleidung"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Haushaltgeräte"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Elektronikgeräte"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Computer"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mobiletelefone"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "TestKategorie"
                        });
                });

            modelBuilder.Entity("Lali.DataAccess.Entities.Warenkorb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BestellungId")
                        .HasColumnType("int");

                    b.Property<int>("KundenId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Warenkorb");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BestellungId = 0,
                            KundenId = 1
                        });
                });

            modelBuilder.Entity("Lali.DataAccess.Entities.WarenkorbItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ArtikelBezeichnung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ArtikelId")
                        .HasColumnType("int");

                    b.Property<string>("ArtikelImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ArtikelMenge")
                        .HasColumnType("int");

                    b.Property<string>("ArtikelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArtikelNummer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ArtikelPreisGesamtNetto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ArtikelPreisSingleNetto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Gesamtpreis")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("KategorielName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Mwst")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("WarenkorbId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WarenkorbItem");
                });

            modelBuilder.Entity("Lali.DataAccess.Entities.Artikel", b =>
                {
                    b.HasOne("Lali.DataAccess.Entities.Kategorie", "Kategorie")
                        .WithMany()
                        .HasForeignKey("KategorieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategorie");
                });
#pragma warning restore 612, 618
        }
    }
}
